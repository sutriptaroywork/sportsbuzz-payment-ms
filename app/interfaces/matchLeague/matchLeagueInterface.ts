import { CashbackTypeEnums } from "@/enums/cashbackTypeEnums/cashbackTypeEnums";
import { CategoryTypeEnums } from "@/enums/categoryTypeEnums/categoryTypeEnums";
import { MatchStatus } from "@/enums/matchStatus/matchStatus";
import { RankTypeEnums } from "@/enums/rankTypeEnums/rankTypeEnums";
import { ObjectId } from "mongodb";

export interface MatchLeagueAttributes {
  _id: ObjectId;
  iMatchId: ObjectId;
  iLeagueId: ObjectId;
  iLeagueCatId: ObjectId;
  iFilterCatId: ObjectId;
  sShareLink: string;
  sName: string;
  nMax: number;
  nMin: number;
  nPrice: number;
  nTotalPayout: number;
  nDeductPercent: number;
  nBonusUtil: number;
  aLeaguePrize: Array<{
    nRankFrom: number;
    nRankTo: number;
    nPrize: number;
    eRankType: RankTypeEnums;
    sInfo: string;
    sImage: string;
  }>;
  sLeagueCategory: string;
  sFilterCategory: string;
  sPayoutBreakupDesign: string;
  bConfirmLeague: boolean;
  bMultipleEntry: boolean;
  bAutoCreate: boolean;
  bCancelled: boolean;
  bPoolPrize: boolean;
  bUnlimitedJoin: boolean;
  bCopyLeague: boolean;
  eCategory: CategoryTypeEnums;
  nPosition: number;
  nLeaguePrice: number;
  bPrizeDone: boolean;
  bWinningDone: boolean;
  nWinnersCount: number;
  nTeamJoinLimit: number;
  nJoined: number | undefined;
  iUserId: ObjectId;
  bPrivateLeague: boolean;
  sFairPlay: string;
  nAdminCommission: number;
  nCreatorBonusGst: number;
  nCreatorCommission: number;
  nLoyaltyPoint: number;
  bCashbackEnabled: boolean;
  nMinCashbackTeam: number;
  nCashbackAmount: number;
  eCashbackType: CashbackTypeEnums;
  bIsProcessed: boolean;
  sShareCode: string;
  dCreatedAt: Date;
  dUpdatedAt: Date;
  bInternalLeague: boolean;
  nMinTeamCount: number;
  nBotsCount: number;
  nCopyBotsPerTeam: number;
  eMatchStatus: MatchStatus;
  bBotCreate: boolean;
  bCopyBotInit: boolean;
  sExternalId: string;
  createdAt?: Date;
  updatedAt?: Date;
}
